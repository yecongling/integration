<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.net.engine.mapper.EndpointTypeMapper">
    <!-- 首先建立表和实体的映射(字段不同的情况) -->
    <resultMap id="endpointType" type="cn.net.engine.bean.project.EndpointType">
        <result column="create_by" property="createBy"/>
        <result column="supported_modes" property="supportedModes"/>
        <result column="create_time" property="createTime" javaType="Date"/>
        <result column="update_by" property="updateBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="parent_id" property="parentId"/>
        <!-- 可以关联 - 如果内部有其他关联的对象时可使用，如果是集合的时候 collection -->
        <collection property="properties" javaType="cn.net.engine.bean.project.EndpointTypeConfig">
            <result property="id" column="config_id"/>
            <result property="name" column="config_name"/>
            <result property="appliesTo" column="applies_to"/>
            <result property="defaultValue" column="default_value"/>
            <result column="create_by" property="createBy"/>
            <result column="create_time" property="createTime" javaType="Date"/>
            <result column="update_by" property="updateBy"/>
            <result column="update_time" property="updateTime" javaType="Date"/>
            <result column="type_id" property="typeId"/>
            <result column="validation_rules" property="validationRules"/>
            <result column="config_id" property="id"/>
        </collection>
    </resultMap>

    <!-- 根据名称查询端点类型数据条数 -->
    <select id="getEndpointTypeByName" parameterType="string" resultType="int">
        select count(1)
        from t_engine_endpoint_type
        where name = #{name}
    </select>

    <!-- 根据id查询端点类型 -->
    <select id="getEndpointTypeById" parameterType="string" resultType="cn.net.engine.bean.project.EndpointType">
        select name, supported_modes
        from t_engine_endpoint_type
        where id = #{id}
    </select>

    <!-- 获取所有端点类型-不包括配置 -->
    <select id="getEndpointTypes" parameterType="cn.net.engine.bean.project.EndpointType" resultMap="endpointType">
        select
        id,
        name,
        supported_modes,
        parent_id
        from t_engine_endpoint_type
        <if test="et != null">
            <where>
                <if test="et.name != null and et.name != ''">
                    and instr(name, #{et.name}) >= 0
                </if>
            </where>
        </if>
    </select>

    <!-- 查询端点类型（不查询配置，只需要id,name,supported_modes, parent_id） -->
    <select id="getEndpointType" parameterType="string" resultMap="endpointType">
        select id, name, supported_modes, parent_id from integration.t_engine_endpoint_type
        <where>
            <if test="typeName != null and typeName != ''">
                and instr(name, #{typeName}) >= 0
            </if>
        </where>
    </select>

    <!-- 新增端点类型 -->
    <insert id="addEndpointType" parameterType="cn.net.engine.bean.project.EndpointType">
        insert into t_engine_endpoint_type (id, name, supported_modes, create_by, create_time, update_by, update_time)
        VALUES (#{id}, #{name}, #{supportedModes}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime})
    </insert>

    <!-- 更新端点类型表 -->
    <update id="updateEndpointType" parameterType="cn.net.engine.bean.project.EndpointType">
        update t_engine_endpoint_type
        set name            = #{name},
            supported_modes = #{supportedModes},
            update_by       = #{updateBy},
            update_time     = #{updateTime}
        where id = #{id}
    </update>

    <!-- 删除端点类型表 -->
    <delete id="deleteEndpointType" parameterType="string">
        delete
        from t_engine_endpoint_type
        where id = #{id}
    </delete>
</mapper>